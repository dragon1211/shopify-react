import {
  Box,
  Flex,
  Text,
  IconButton,
  Button,
  HStack,
  Stack,
  Collapse,
  Icon,
  Link,
  Popover,
  PopoverTrigger,
  PopoverContent,
  useColorModeValue,
  useDisclosure,
  Divider,
} from '@chakra-ui/react';
import {
  HamburgerIcon,
  CloseIcon,
  ChevronDownIcon,
  ChevronRightIcon,
} from '@chakra-ui/icons';
import Logo from './icons/logo';
import CartIcon from './icons/cartIcon';
import UserIcon from './icons/userIcon';
import StrokeIcon from './icons/strokeIcon';
import React from 'react';

interface Menu {
  title: string,
  url: string
}

export default function Navbar() {
  const { isOpen, onToggle } = useDisclosure();

  return (
    <Box position="fixed" w="100%" bg="rgba(255,255,255, .9)" zIndex="4">
      <Flex
        color="#665B51"
        minH={'72px'}
        px={{ md: "40px",  base: "20px" }}
        borderBottom={1}
        align={'center'}
        >
        <Flex flex={1} justify="start" h="100%" align="center" as={'a'} href="/">
          <Logo />
        </Flex>

        <Flex align="center" display={{ base: 'none', md: 'flex' }}>
            <DesktopNav />
        </Flex>
        <Flex align="center" display={{ base: 'flex', md: 'none' }}>
          <Box mr="15px">
            <UserIcon />
          </Box>
          <Box mr="15px">
            <CartIcon />
          </Box>
          <IconButton
            variant="iconPrimary"
            onClick={onToggle}
            icon={
              isOpen ? <CloseIcon w={3} h={3} /> : <HamburgerIcon w={5} h={5} />
            }
            aria-label={'Toggle Navigation'}
          />
        </Flex>
      </Flex>

      <Collapse in={isOpen} animateOpacity>
        <MobileNav />
      </Collapse>
    </Box>
  );
}

const DesktopNav = () => {
  const linkColor = useColorModeValue('gray.600', 'gray.200');
  const linkHoverColor = useColorModeValue('gray.800', 'white');
  const popoverContentBgColor = useColorModeValue('white', 'gray.800');

  return (
    <HStack spacing={8}>
      {NAV_ITEMS.map((navItem) => (
        <Box key={navItem.label}>
          <Popover trigger={'hover'} placement={'bottom-start'}>
            <PopoverTrigger>
              <Link
                p={2}
                href={navItem.href ?? '#'}
                fontSize={'sm'}
                fontWeight={500}
                color={linkColor}
                _hover={{
                  textDecoration: 'none',
                  color: linkHoverColor,
                }}>
                {navItem.label}
              </Link>
            </PopoverTrigger>

            {navItem.children && (
              <PopoverContent
                border={0}
                boxShadow={'xl'}
                bg={popoverContentBgColor}
                p={4}
                rounded={'xl'}
                minW={'sm'}>
                <Stack>
                  {navItem.children.map((child) => (
                    <DesktopSubNav key={child.label} {...child} />
                  ))}
                </Stack>
              </PopoverContent>
            )}
          </Popover>
        </Box>
      ))}
      <StrokeIcon />
      <UserIcon />
      <CartIcon />
      <Button
          as={'a'}
          w="100px"
          h="34px"
          variant="primary"
          fontSize="14px"
          borderRadius="10px"
          href={'#'}
        >
        今すぐ購入
      </Button>
    </HStack>
  );
};

const DesktopSubNav = ({ label, href, subLabel }: NavItem) => {
  return (
    <Link
      href={href}
      role={'group'}
      display={'block'}
      p={2}
      rounded={'md'}
      _hover={{ bg: useColorModeValue('pink.50', 'gray.900') }}>
      <Stack direction={'row'} align={'center'}>
        <Box>
          <Text
            transition={'all .3s ease'}
            _groupHover={{ color: 'pink.400' }}
            fontWeight={500}>
            {label}
          </Text>
          <Text fontSize={'sm'}>{subLabel}</Text>
        </Box>
        <Flex
          transition={'all .3s ease'}
          transform={'translateX(-10px)'}
          opacity={0}
          _groupHover={{ opacity: '100%', transform: 'translateX(0)' }}
          justify={'flex-end'}
          align={'center'}
          flex={1}>
          <Icon color={'pink.400'} w={5} h={5} as={ChevronRightIcon} />
        </Flex>
      </Stack>
    </Link>
  );
};

const MobileNav = () => {
  return (
    <Stack
      bg={useColorModeValue('white', 'gray.800')}
      px="25px"
      py={4}
      h="100vh"
      display={{ md: 'none' }}>
      {NAV_ITEMS.map((navItem) => (
        <MobileNavItem key={navItem.label} {...navItem} />
        ))}
        <Divider />
        <MobileNavItem label="よくあるご質問" href="/"/>
        <Box fontWeight="600" py={"60px"}>
          公式SNS
          <Flex mt="16px" alignItems="center">
            {sns.map((s,i) => <Box key={i} as='a' href={s.url} mr="25px" >{s.icon}</Box>)}
          </Flex>
        </Box>
    </Stack>
  );
};

const MobileNavItem = ({ label, children, href }: NavItem) => {
  const { isOpen, onToggle } = useDisclosure();

  return (
    <Stack spacing={4} onClick={children && onToggle}>
      <Flex
        py={"16px"}
        as={Link}
        href={href ?? '#'}
        justify={'space-between'}
        align={'center'}
        _hover={{
          textDecoration: 'none',
        }}>
        <Text
          fontWeight={600}
          >
          {label}
        </Text>
        {children && (
          <Icon
            as={ChevronDownIcon}
            transition={'all .25s ease-in-out'}
            transform={isOpen ? 'rotate(180deg)' : ''}
            w={6}
            h={6}
          />
        )}
      </Flex>

      <Collapse in={isOpen} animateOpacity style={{ marginTop: '0!important' }}>
        <Stack
          ml="5px"
          // mt="-16px"
          align={'start'}>
          {children &&
            children.map((child) => (
              <Link key={child.label} py={0} href={child.href}>
                {child.label}
              </Link>
            ))}
        </Stack>
      </Collapse>
    </Stack>
  );
};

interface NavItem {
  label: string;
  subLabel?: string;
  children?: Array<NavItem>;
  href?: string;
}
const NAV_ITEMS: Array<NavItem> = [
  {
    label: '商品一覧',
    children: [
      {
        label: '全てのカテゴリ',
        href: '/',
      },
      {
        label: 'お弁当',
        // subLabel: 'お弁当好きなあなたに',
        href: '/',
      },
      {
        label: 'お惣菜',
        href: '/',
      },
      {
        label: 'スイーツ',
        href: '/',
      },
      {
        label: 'サプリメント',
        href: '/',
      },
      {
        label: 'ギフト',
        href: '/',
      },
    ],
  },
  {
    label: 'ママの休食について',
    href: '/pages/about',
  },
  {
    label: 'ギフトのご案内',
    href: '/product/gift',
  },
  // {
  //   label: 'お知らせ',
  //   href: '#',
  // },
  // {
  //   label: 'FAQ',
  //   href: '#',
  // },
];

const sns = [
  {
    icon: 
      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M23.643 4.93708C22.808 5.30708 21.911 5.55708 20.968 5.67008C21.941 5.08787 22.669 4.17154 23.016 3.09208C22.1019 3.63507 21.1014 4.01727 20.058 4.22208C19.3564 3.47294 18.4271 2.9764 17.4143 2.80955C16.4016 2.6427 15.3621 2.81487 14.4572 3.29933C13.5524 3.78379 12.8328 4.55344 12.4102 5.48878C11.9875 6.42412 11.8855 7.47283 12.12 8.47208C10.2677 8.37907 8.45564 7.89763 6.80144 7.05898C5.14723 6.22034 3.68785 5.04324 2.51801 3.60408C2.11801 4.29408 1.88801 5.09408 1.88801 5.94608C1.88757 6.71307 2.07644 7.46832 2.43789 8.14481C2.79934 8.8213 3.32217 9.39812 3.96001 9.82408C3.22029 9.80054 2.49688 9.60066 1.85001 9.24108V9.30108C1.84994 10.3768 2.22204 11.4195 2.90319 12.2521C3.58434 13.0847 4.53258 13.656 5.58701 13.8691C4.9008 14.0548 4.18135 14.0821 3.48301 13.9491C3.78051 14.8747 4.36001 15.6841 5.14038 16.264C5.92075 16.8439 6.86293 17.1653 7.83501 17.1831C6.18485 18.4785 4.1469 19.1812 2.04901 19.1781C1.67739 19.1782 1.30609 19.1565 0.937012 19.1131C3.06649 20.4823 5.54535 21.2089 8.07701 21.2061C16.647 21.2061 21.332 14.1081 21.332 7.95208C21.332 7.75208 21.327 7.55008 21.318 7.35008C22.2293 6.69105 23.0159 5.87497 23.641 4.94008L23.643 4.93708V4.93708Z" fill="#EB6860"/>
      </svg>      
    ,
    url: '',
  },
  {
    icon: 
      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path fillRule="evenodd" clipRule="evenodd" d="M0 12.067C0 18.033 4.333 22.994 10 24V15.333H7V12H10V9.333C10 6.333 11.933 4.667 14.667 4.667C15.533 4.667 16.467 4.8 17.333 4.933V8H15.8C14.333 8 14 8.733 14 9.667V12H17.2L16.667 15.333H14V24C19.667 22.994 24 18.034 24 12.067C24 5.43 18.6 0 12 0C5.4 0 0 5.43 0 12.067Z" fill="#EB6860"/>
      </svg>,      
    url: '',
  },
  {
    icon: 
      <svg width="20" height="23" viewBox="0 0 20 23" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g clipPath="url(#clip0_105_478)">
        <path d="M-9.04357e-07 7.36243L-1.95726e-06 19.4062C-2.06137e-06 20.5971 0.959373 21.5625 2.14286 21.5625L17.8571 21.5625C19.0406 21.5625 20 20.5971 20 19.4063L20 3.59429C20 2.40341 19.0406 1.43804 17.8571 1.43804L5.88759 1.43804C5.31927 1.43804 4.77423 1.66522 4.37237 2.0696L0.627633 5.83773C0.225768 6.24211 2.11741e-06 6.79055 -9.04357e-07 7.36243V7.36243ZM5.71429 3.76868L5.71429 7.18804L2.31616 7.18804L5.71429 3.76868ZM2.14286 19.4062L2.14286 9.34429L6.78571 9.34429C7.37746 9.34429 7.85714 8.8616 7.85714 8.26616L7.85714 3.59429L17.8571 3.59429L17.8571 19.4062L2.14286 19.4062Z" fill="#EB6860"/>
        </g>
        <defs>
        <clipPath id="clip0_105_478">
        <rect width="20" height="23" fill="white" transform="translate(20 23) rotate(-180)"/>
        </clipPath>
        </defs>
      </svg>,
    url: '',
  },
  {
    icon: 
      <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path fillRule="evenodd" clipRule="evenodd" d="M6.465 0.066C7.638 0.012 8.012 0 11 0C13.988 0 14.362 0.013 15.534 0.066C16.706 0.119 17.506 0.306 18.206 0.577C18.939 0.854 19.604 1.287 20.154 1.847C20.714 2.396 21.146 3.06 21.422 3.794C21.694 4.494 21.88 5.294 21.934 6.464C21.988 7.639 22 8.013 22 11C22 13.988 21.987 14.362 21.934 15.535C21.881 16.705 21.694 17.505 21.422 18.205C21.146 18.9391 20.7133 19.6042 20.154 20.154C19.604 20.714 18.939 21.146 18.206 21.422C17.506 21.694 16.706 21.88 15.536 21.934C14.362 21.988 13.988 22 11 22C8.012 22 7.638 21.987 6.465 21.934C5.295 21.881 4.495 21.694 3.795 21.422C3.06092 21.146 2.39582 20.7133 1.846 20.154C1.28638 19.6047 0.853315 18.9399 0.577 18.206C0.306 17.506 0.12 16.706 0.066 15.536C0.012 14.361 0 13.987 0 11C0 8.012 0.013 7.638 0.066 6.466C0.119 5.294 0.306 4.494 0.577 3.794C0.853723 3.06008 1.28712 2.39531 1.847 1.846C2.39604 1.2865 3.06047 0.853443 3.794 0.577C4.494 0.306 5.294 0.12 6.464 0.066H6.465ZM15.445 2.046C14.285 1.993 13.937 1.982 11 1.982C8.063 1.982 7.715 1.993 6.555 2.046C5.482 2.095 4.9 2.274 4.512 2.425C3.999 2.625 3.632 2.862 3.247 3.247C2.88205 3.60205 2.60118 4.03428 2.425 4.512C2.274 4.9 2.095 5.482 2.046 6.555C1.993 7.715 1.982 8.063 1.982 11C1.982 13.937 1.993 14.285 2.046 15.445C2.095 16.518 2.274 17.1 2.425 17.488C2.601 17.965 2.882 18.398 3.247 18.753C3.602 19.118 4.035 19.399 4.512 19.575C4.9 19.726 5.482 19.905 6.555 19.954C7.715 20.007 8.062 20.018 11 20.018C13.938 20.018 14.285 20.007 15.445 19.954C16.518 19.905 17.1 19.726 17.488 19.575C18.001 19.375 18.368 19.138 18.753 18.753C19.118 18.398 19.399 17.965 19.575 17.488C19.726 17.1 19.905 16.518 19.954 15.445C20.007 14.285 20.018 13.937 20.018 11C20.018 8.063 20.007 7.715 19.954 6.555C19.905 5.482 19.726 4.9 19.575 4.512C19.375 3.999 19.138 3.632 18.753 3.247C18.3979 2.88207 17.9657 2.60121 17.488 2.425C17.1 2.274 16.518 2.095 15.445 2.046ZM9.595 14.391C10.3797 14.7176 11.2534 14.7617 12.0669 14.5157C12.8805 14.2697 13.5834 13.7489 14.0556 13.0422C14.5278 12.3356 14.7401 11.4869 14.656 10.6411C14.572 9.79534 14.197 9.00497 13.595 8.405C13.2112 8.02148 12.7472 7.72781 12.2363 7.54515C11.7255 7.36248 11.1804 7.29536 10.6405 7.34862C10.1006 7.40187 9.57915 7.57418 9.1138 7.85313C8.64845 8.13208 8.25074 8.51074 7.9493 8.96185C7.64786 9.41296 7.45019 9.92529 7.37052 10.462C7.29084 10.9986 7.33115 11.5463 7.48854 12.0655C7.64593 12.5847 7.91648 13.0626 8.28072 13.4647C8.64496 13.8668 9.09382 14.1832 9.595 14.391ZM7.002 7.002C7.52702 6.47697 8.15032 6.0605 8.8363 5.77636C9.52228 5.49222 10.2575 5.34597 11 5.34597C11.7425 5.34597 12.4777 5.49222 13.1637 5.77636C13.8497 6.0605 14.473 6.47697 14.998 7.002C15.523 7.52702 15.9395 8.15032 16.2236 8.8363C16.5078 9.52228 16.654 10.2575 16.654 11C16.654 11.7425 16.5078 12.4777 16.2236 13.1637C15.9395 13.8497 15.523 14.473 14.998 14.998C13.9377 16.0583 12.4995 16.654 11 16.654C9.50046 16.654 8.06234 16.0583 7.002 14.998C5.94166 13.9377 5.34597 12.4995 5.34597 11C5.34597 9.50046 5.94166 8.06234 7.002 7.002ZM17.908 6.188C18.0381 6.06527 18.1423 5.91768 18.2143 5.75397C18.2863 5.59027 18.3248 5.41377 18.3274 5.23493C18.33 5.05609 18.2967 4.87855 18.2295 4.71281C18.1622 4.54707 18.0624 4.39651 17.936 4.27004C17.8095 4.14357 17.6589 4.04376 17.4932 3.97652C17.3275 3.90928 17.1499 3.87598 16.9711 3.87858C16.7922 3.88119 16.6157 3.91965 16.452 3.9917C16.2883 4.06374 16.1407 4.1679 16.018 4.298C15.7793 4.55103 15.6486 4.88712 15.6537 5.23493C15.6588 5.58274 15.7992 5.91488 16.0452 6.16084C16.2911 6.40681 16.6233 6.54723 16.9711 6.5523C17.3189 6.55737 17.655 6.42669 17.908 6.188Z" fill="#EB6860"/>
    </svg>,      
    url: '',
  },
  {
    icon: 
      <svg width="21" height="21" viewBox="0 0 21 21" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M16.9424 8.63037C17.0165 8.62782 17.0904 8.64021 17.1596 8.66681C17.2289 8.69341 17.292 8.73368 17.3454 8.78521C17.3987 8.83674 17.4411 8.89849 17.4701 8.96676C17.4991 9.03503 17.514 9.10844 17.514 9.18261C17.514 9.25677 17.4991 9.33018 17.4701 9.39845C17.4411 9.46673 17.3987 9.52847 17.3454 9.58C17.292 9.63153 17.2289 9.6718 17.1596 9.6984C17.0904 9.72501 17.0165 9.7374 16.9424 9.73484H15.4074V10.7192H16.9424C17.017 10.7156 17.0915 10.7271 17.1615 10.7531C17.2314 10.7792 17.2954 10.8191 17.3495 10.8706C17.4035 10.9221 17.4466 10.984 17.476 11.0527C17.5054 11.1213 17.5205 11.1952 17.5205 11.2698C17.5205 11.3445 17.5054 11.4183 17.476 11.487C17.4466 11.5556 17.4035 11.6175 17.3495 11.669C17.2954 11.7205 17.2314 11.7605 17.1615 11.7865C17.0915 11.8125 17.017 11.824 16.9424 11.8204H14.8575C14.7118 11.8199 14.5721 11.7617 14.4692 11.6585C14.3663 11.5553 14.3084 11.4156 14.3082 11.2698V7.09606C14.3082 6.79222 14.5543 6.54284 14.8575 6.54284H16.9463C17.0881 6.55016 17.2215 6.61172 17.3191 6.71476C17.4166 6.81779 17.4708 6.95441 17.4704 7.09631C17.47 7.23821 17.415 7.3745 17.3168 7.47696C17.2186 7.57941 17.0848 7.64017 16.9431 7.64665H15.4081V8.63103L16.9424 8.63037ZM13.5732 11.2692C13.572 11.4153 13.5131 11.5551 13.4094 11.6581C13.3057 11.7611 13.1655 11.8189 13.0193 11.8191C12.9328 11.8199 12.8472 11.8006 12.7695 11.7627C12.6917 11.7248 12.6238 11.6693 12.5711 11.6006L10.435 8.69534V11.2685C10.435 11.4145 10.377 11.5546 10.2738 11.6578C10.1705 11.7611 10.0305 11.8191 9.88444 11.8191C9.73841 11.8191 9.59837 11.7611 9.49511 11.6578C9.39185 11.5546 9.33384 11.4145 9.33384 11.2685V7.09475C9.33384 6.85915 9.48806 6.64784 9.70988 6.57237C9.76465 6.55302 9.82241 6.54347 9.8805 6.54415C10.0511 6.54415 10.2086 6.63669 10.3143 6.76662L12.4674 9.6784V7.09475C12.4674 6.7909 12.7135 6.54153 13.018 6.54153C13.3225 6.54153 13.5719 6.7909 13.5719 7.09475L13.5732 11.2692ZM8.54897 11.2692C8.54827 11.4155 8.48959 11.5557 8.38578 11.6589C8.28196 11.7621 8.14148 11.8199 7.99509 11.8197C7.8498 11.8185 7.71087 11.76 7.6085 11.6569C7.50613 11.5538 7.44861 11.4144 7.44844 11.2692V7.0954C7.44844 6.79156 7.69453 6.54219 7.99903 6.54219C8.30288 6.54219 8.54963 6.79156 8.54963 7.0954L8.54897 11.2692ZM6.39187 11.8197H4.30303C4.15681 11.8194 4.01662 11.7614 3.91292 11.6583C3.80921 11.5552 3.75037 11.4154 3.74916 11.2692V7.0954C3.74916 6.79156 3.99853 6.54219 4.30303 6.54219C4.60753 6.54219 4.85362 6.79156 4.85362 7.0954V10.7186H6.39187C6.5379 10.7186 6.67795 10.7766 6.7812 10.8798C6.88446 10.9831 6.94247 11.1231 6.94247 11.2692C6.94247 11.4152 6.88446 11.5552 6.7812 11.6585C6.67795 11.7617 6.5379 11.8197 6.39187 11.8197ZM21 9.02281C21 4.3234 16.2862 0.498779 10.5 0.498779C4.71384 0.498779 0 4.3234 0 9.02281C0 13.234 3.73603 16.7613 8.78063 17.4313C9.12253 17.5029 9.58716 17.6571 9.70725 17.9478C9.81291 18.2103 9.7755 18.6172 9.74137 18.8948L9.59766 19.7866C9.55631 20.0498 9.38569 20.8228 10.5138 20.351C11.6452 19.8792 16.567 16.783 18.7714 14.2459C20.2788 12.5954 21 10.8997 21 9.02281Z" fill="#EB6860"/>
      </svg>,
    url: '',
  },
]